# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request'

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -Denv=dev --file pom.xml clean compile
  
  build-docker-image:
    
    runs-on: ubuntu-latest

    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Push Docker Image to Docker Hub
      env:
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        DOCKER_HUB_KEY: ${{ secrets.DOCKER_HUB_KEY }}
        IMAGE_NAME: newyeti-config-server
      run: |-
        mvn compile com.google.cloud.tools:jib-maven-plugin:3.3.2:build \
        -Djib.from.image=eclipse-temurin \
        -Djib.to.image=registry.hub.docker.com/$DOCKER_HUB_USERNAME/$IMAGE_NAME
        -Djib.to.auth.username=$DOCKER_HUB_USERNAME
        -Djib.to.auth.password=$DOCKER_HUB_KEY


